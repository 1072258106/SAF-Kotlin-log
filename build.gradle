// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    ext.kotlin_version = '1.0.5-3'
//    ext.support_version = '23.1.1'
    ext.anko_version = '0.8.2'
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//genera aar

Properties properties = new Properties()

File localPropertiesFile = project.rootProject.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}
File projectPropertiesFile = project.rootProject.file("project.properties");
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
}

// log
def log = properties.getProperty("project.log")

def classPath = properties.getProperty("project.class.path")
def javaClassPath = properties.getProperty("project.java.class.path")

def logPath = [project.findProject(log).buildDir.absolutePath + classPath];

task buildLog( type: Jar) {

    archiveName = 'SAF-kotlin-log-1.0.jar'

    //初始化资源路径集
    from logPath

    //去除路径集下部分的资源
    exclude "**/BuildConfig.class"
    exclude "**/Manifest.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"

    //只导入资源路径集下的部分资源
    include "cn/salesuite/**/*.class"
    destinationDir = file('build/outputs/')
}

//生成所有的jar包 编译前，请手动build一下工程，以生成中间文件
task generaAllJar(dependsOn: ['buildLog']) {
    logger.info("all build finish!");
}

defaultTasks 'generaAllJar'
